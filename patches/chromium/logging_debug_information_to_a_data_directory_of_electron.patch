From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: NzSN <aydenlin@foxmail.com>
Date: Tue, 5 Sep 2023 16:27:28 +0800
Subject: Logging debug information to a data directory of electron.

To change logging path due to permission problem when executable
residein a place where it has no right to write.

diff --git a/content/app/content_main.cc b/content/app/content_main.cc
index 71879a465c91bbe55a6545f0d1a2dd6d2275e62a..bee1b89352fbf295281e31a449516833846ac0d5 100644
--- a/content/app/content_main.cc
+++ b/content/app/content_main.cc
@@ -51,6 +51,8 @@
 #if BUILDFLAG(IS_WIN)
 #include <windows.h>
 #include <libloaderapi.h>
+#include <shlobj_core.h>
+#include <shlwapi.h>
 
 #include "base/win/process_startup_helper.h"
 #include "base/win/win_util.h"
@@ -345,16 +347,35 @@ RunContentProcess(ContentMainParams params,
 
 void NO_STACK_PROTECTOR CMDSwitchSetup() {
 
-  base::CommandLine::ForCurrentProcess()->AppendSwitch(::switches::kEnableLogging);  
+#if BUILDFLAG(IS_WIN)
+  // Check existence of data folder of electron which
+  // reside in roaming folder, a standard known folder of windows.
+  WCHAR roamingPath[MAX_PATH];
+
+  if (SHGetKnownFolderPath(
+        FOLDERID_RoamingAppData, 0, NULL, roamingPath) == E_FAIL) {
+
+    return;
+  }
 
-  // Setup logfile path to where executable residein.
-  WCHAR execPath[MAX_PATH];
-  GetModuleFileNameW(NULL, execPath, MAX_PATH);
-  std::wstring execDir{execPath};
-  execDir = (execDir.substr(0, execDir.find_last_of(L"\\/")) + L"\\debug.log");  
-  base::FilePath logPath{execDir.c_str()};
+  // Build path to data of Electron
+  std::wstring dataPath{roamingPath}, logPath;
+  dataPath += L"\\Electron";
+  // Check existence of electron data path
+  if (!PathFileExistsW(dataPath.c_str())) {
+    return;
+  } else {
+    logPath = dataPath + L"\\debug.log";
+  }
+  base::FilePath logPath{logPath.c_str()};
+
+  // Switch settings
+  base::CommandLine::ForCurrentProcess()->AppendSwitch(
+    ::switches::kEnableLogging);
+  base::CommandLine::ForCurrentProcess()->AppendSwitchPath(
+    ::switches::kLogFile, logPath);
+#endif
 
-  base::CommandLine::ForCurrentProcess()->AppendSwitchPath(::switches::kLogFile, logPath);
 }
 
 // This function must be marked with NO_STACK_PROTECTOR or it may crash on
